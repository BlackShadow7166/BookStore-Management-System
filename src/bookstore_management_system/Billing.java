/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bookstore_management_system;

import java.awt.print.PrinterException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author usama
 */
public class Billing extends javax.swing.JFrame {

    /**
     * Creates new form Billing
     */
    public Billing() {
        initComponents();
        displayBooks();
       // bookTitleTF.setEditable(false);
        priceTF.setEditable(false);
        billNumberTF.setEditable(false);
        billNumberTF.setText(String.valueOf(1));
        setBillNumber();
    }
    public Billing(String name){
        initComponents();
        displayBooks();
        userNameLBL.setText(name);
        priceTF.setEditable(false);
        billNumberTF.setEditable(false);
        setBillNumber();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        closeWindowLBL = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addToBillButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        printButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        priceTF = new javax.swing.JTextField();
        userNameLBL = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        billNumberTF = new javax.swing.JTextField();
        quantityTF = new javax.swing.JTextField();
        clientNameTF = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        booksListTBL = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        totalText = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        logoutLBL = new javax.swing.JLabel();
        isbnTF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        bookTitleTF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        billTBL = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        closeWindowLBL.setForeground(new java.awt.Color(255, 255, 255));
        closeWindowLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bookstore_management_system/icons8-cancel-32.png"))); // NOI18N
        closeWindowLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeWindowLBLMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Algerian", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(" BookStore Software");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(359, 359, 359)
                .addComponent(closeWindowLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeWindowLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        addToBillButton.setBackground(new java.awt.Color(204, 204, 204));
        addToBillButton.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        addToBillButton.setForeground(new java.awt.Color(0, 0, 153));
        addToBillButton.setText("Add To Bill");
        addToBillButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToBillButtonMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Price");

        printButton.setBackground(new java.awt.Color(204, 204, 204));
        printButton.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        printButton.setForeground(new java.awt.Color(0, 0, 153));
        printButton.setText("Print");
        printButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printButtonMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Bill No");

        resetButton.setBackground(new java.awt.Color(204, 204, 204));
        resetButton.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        resetButton.setForeground(new java.awt.Color(0, 0, 153));
        resetButton.setText("Reset Bill");
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });

        userNameLBL.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        userNameLBL.setForeground(new java.awt.Color(0, 0, 153));
        userNameLBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userNameLBL.setText("Users");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 153));
        jLabel14.setText("Quantity");

        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bookstore_management_system/icons8-user-32.png"))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 153));
        jLabel12.setText("Client Name");

        booksListTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Title", "Author", "Categories", "Quantity", "Price"
            }
        ));
        booksListTBL.setRowHeight(28);
        booksListTBL.setSelectionBackground(new java.awt.Color(0, 0, 0));
        booksListTBL.setSelectionForeground(new java.awt.Color(255, 255, 255));
        booksListTBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                booksListTBLMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(booksListTBL);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 153));
        jLabel10.setText("Books List");

        totalText.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        totalText.setForeground(new java.awt.Color(0, 0, 153));
        totalText.setText("Total");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 153));
        jLabel13.setText("Books Bill");

        logoutLBL.setForeground(new java.awt.Color(0, 0, 153));
        logoutLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bookstore_management_system/icons8-go-back-30.png"))); // NOI18N
        logoutLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLBLMouseClicked(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 153));
        jLabel15.setText("ISBN");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 153));
        jLabel16.setText("Book Title");

        searchButton.setBackground(new java.awt.Color(204, 204, 204));
        searchButton.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        searchButton.setForeground(new java.awt.Color(0, 0, 153));
        searchButton.setText("Search");
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });

        billTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num", "Product", "Price", "quantity", "Total"
            }
        ));
        jScrollPane3.setViewportView(billTBL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(isbnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addGap(95, 95, 95)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(bookTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addToBillButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGap(95, 95, 95)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(clientNameTF)
                                        .addGap(95, 95, 95)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(billNumberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(userNameLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(147, 147, 147)
                                    .addComponent(logoutLBL))))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(204, 204, 204))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(totalText)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(userNameLBL)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(bookTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(isbnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(billNumberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(16, 16, 16))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(56, 56, 56)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(addToBillButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logoutLBL)
                            .addComponent(printButton))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    int stock = 0;
    int num = 0; 
    int total =0;
    int sum =0;
    Statement statement = null;
    ResultSet resultSet = null;
    
    private void booksListTBLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_booksListTBLMouseClicked
        DefaultTableModel model = (DefaultTableModel)booksListTBL.getModel();
        int myIndex = booksListTBL.getSelectedRow();
        isbnTF.setText(model.getValueAt(myIndex, 0).toString());
        bookTitleTF.setText(model.getValueAt(myIndex, 1).toString());
        stock = Integer.parseInt( model.getValueAt(myIndex, 4).toString());
        priceTF.setText(model.getValueAt(myIndex, 5).toString());
        bookTitleTF.setEditable(false);
        isbnTF.setEditable(false);
    }//GEN-LAST:event_booksListTBLMouseClicked
    private void setBillNumber(){
           
       try {
            String query = "SELECT COUNT(*) AS total FROM BILLTBL";
            PreparedStatement checkCount = ConClass.connectDB().prepareStatement(query);
            ResultSet count = checkCount.executeQuery();
            count.next();
           int total1 =  count.getInt("total");
           System.out.print(total1);

            if (total1 > 0) 
            {
//                String maxQuery = "SELECT MAX(BNUM) AS max_primary_key FROM BILLTBL";
//                PreparedStatement maxStatement = ConClass.connectDB().prepareStatement(maxQuery);
//                ResultSet rs = maxStatement.executeQuery();
//                          
//                System.out.print(rs);
//                
//                int maxBillNumber = rs.getInt("max_primary_key") + 1;
//                System.out.print(maxBillNumber);
//
//                billNumberTF.setText(String.valueOf(maxBillNumber));
                  billNumberTF.setText(String.valueOf(total1+1));

                  
                
                } else{
                       
                billNumberTF.setText(String.valueOf(1));
                    }
        } catch (SQLException e) {
        }

                             
    }
    
    private void addToBillButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToBillButtonMouseClicked
       
        
        
        if(priceTF.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Kindly Select the book Row from the table First", "Input Error", JOptionPane.INFORMATION_MESSAGE);
       }else if(quantityTF.getText().isEmpty() || clientNameTF.getText().isEmpty() ){
            JOptionPane.showMessageDialog(this, "Kindly Enter the quantity of books or Client Name First", "Input Error", JOptionPane.INFORMATION_MESSAGE);
       }else if(Integer.parseInt(quantityTF.getText()) > stock){
            JOptionPane.showMessageDialog(this, "Book Out of Stock, Kindly Enter less number number of books", "Input Error", JOptionPane.INFORMATION_MESSAGE);
            quantityTF.setText("");
       }else{
           total = Integer.parseInt(quantityTF.getText()) * Integer.parseInt(priceTF.getText());
           num++;
           
           Object[] rowData = {num,bookTitleTF.getText(),priceTF.getText(),quantityTF.getText(),total};
           
           DefaultTableModel model = (DefaultTableModel)billTBL.getModel();
           model.addRow(rowData);
           resetTF();
           bookTitleTF.setEditable(true);
           isbnTF.setEditable(true);
           sum += total;
           totalText.setText("Total = " + sum);
           
       }
    }//GEN-LAST:event_addToBillButtonMouseClicked

    private void closeWindowLBLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeWindowLBLMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeWindowLBLMouseClicked

    private void logoutLBLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLBLMouseClicked
        try{
            new Login().setVisible(true);
            this.dispose();
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_logoutLBLMouseClicked
    
    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        if (isbnTF.getText().isEmpty() && bookTitleTF.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Kindly enter ISBN or Title of Book to search", "Input Error", JOptionPane.INFORMATION_MESSAGE);
        }else if(bookTitleTF.getText().isEmpty() && !isbnTF.getText().isEmpty()){
            try{
            PreparedStatement checkISBN = ConClass.connectDB().prepareStatement("SELECT * FROM BooksTBL WHERE ISBN = ?",
            ResultSet.TYPE_SCROLL_INSENSITIVE,
            ResultSet.CONCUR_READ_ONLY
          
            );
            checkISBN.setString(1, isbnTF.getText());
            resultSet = checkISBN.executeQuery();
            
            if (!resultSet.next()) {
                // If resultSet is empty, the book with the specified ISBN is not found
                JOptionPane.showMessageDialog(this, "Book with ISBN " + isbnTF.getText() + " not found", "Not Found", JOptionPane.INFORMATION_MESSAGE);
        
            } else {
               resultSet.beforeFirst();
               booksListTBL.setModel(DbUtils.resultSetToTableModel(resultSet));
            }            
        }
        catch(SQLException e){
              System.out.print(e);
        }
        }else if(!bookTitleTF.getText().isEmpty() && isbnTF.getText().isEmpty()){
            try{
            
            PreparedStatement checkTitle = ConClass.connectDB().prepareStatement("SELECT * FROM BooksTBL WHERE btitle = ?",
            ResultSet.TYPE_SCROLL_INSENSITIVE,
            ResultSet.CONCUR_READ_ONLY
                    );
            checkTitle.setString(1, bookTitleTF.getText().toLowerCase());
            resultSet = checkTitle.executeQuery();
            if (!resultSet.next()) {
                // If resultSet is empty, the book with the specified ISBN is not found
                JOptionPane.showMessageDialog(this, "Book with this title " + bookTitleTF.getText() + " not found", "Not Found", JOptionPane.INFORMATION_MESSAGE);
        
            } else {
               // Book with the specified ISBN is found
               resultSet.beforeFirst();
               booksListTBL.setModel(DbUtils.resultSetToTableModel(resultSet));
            } 
            
        }
        catch(SQLException e){
              System.out.print(e);
        }
        }else{
            try{
            PreparedStatement checkISBN = ConClass.connectDB().prepareStatement("SELECT * FROM BooksTBL WHERE ISBN = ?",
            ResultSet.TYPE_SCROLL_INSENSITIVE,
            ResultSet.CONCUR_READ_ONLY
            );
            checkISBN.setString(1, isbnTF.getText());
            resultSet = checkISBN.executeQuery();
            if (!resultSet.next()) {
                // If resultSet is empty, the book with the specified ISBN is not found
                JOptionPane.showMessageDialog(this, "Book with ISBN " + isbnTF.getText() + " not found", "Not Found", JOptionPane.INFORMATION_MESSAGE);
        
            } else {
               // Book with the specified ISBN is found
               resultSet.beforeFirst();
               booksListTBL.setModel(DbUtils.resultSetToTableModel(resultSet));   
            }            
        }
        catch(SQLException e){
              System.out.print(e);
        }
        }
    }//GEN-LAST:event_searchButtonMouseClicked

    private void resetTF(){
        isbnTF.setText("");
        bookTitleTF.setText("");
        quantityTF.setText("");
        priceTF.setText("");
        
        
        displayBooks();
    }
    
    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetButtonMouseClicked
        DefaultTableModel model = (DefaultTableModel)billTBL.getModel();
        model.setRowCount(0);
        billTBL.repaint();
        num = 0;
        sum =0;
        totalText.setText("");
    }//GEN-LAST:event_resetButtonMouseClicked

    
    
    private void printButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printButtonMouseClicked
        
        DefaultTableModel model = (DefaultTableModel)billTBL.getModel();
        
        if(model.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "Kindly Add Some Books in the Bill Firstly, then try to Print Bill ", "Input Error", JOptionPane.INFORMATION_MESSAGE);
        }else{         
            for(int i=0; i <= model.getRowCount()-1; i++){
               String query = "update admin1.BOOKSTBL set bquantity = bquantity - ? where btitle = ?";
               
               String bookTitle = model.getValueAt(i,1).toString();
               String quantity = model.getValueAt(i, 3).toString();
              
               
               try{
                  PreparedStatement updateStock = ConClass.connectDB().prepareStatement(query);
                  //int books = Integer.parseInt(quantity);
                  updateStock.setString(1, quantity);
                  updateStock.setString(2, bookTitle);
                  updateStock.executeUpdate();
               }
               catch(SQLException e){
                   
               } 
            }
            
            Object[] totalRow = {"","","","",sum};
            model.addRow(totalRow);

            
            try{
                PreparedStatement add = ConClass.connectDB().prepareStatement("insert into BILLTBL values(?,?,?,?)");
                add.setInt(1, Integer.parseInt(billNumberTF.getText()));
                add.setString(2, userNameLBL.getText());
                add.setString(3, clientNameTF.getText());
                add.setInt(4, sum);
                add.execute();
                
            }
            catch(NumberFormatException | SQLException e){
                
            }
             
            try{
                billTBL.print();
            }
            catch(PrinterException e){
                System.out.print(e);
            }
              
             model.setRowCount(0);
            billTBL.repaint();
            resetTF();
            clientNameTF.setText("");
            displayBooks();
            setBillNumber();
            sum =0;
            totalText.setText("");
             
        }

    }//GEN-LAST:event_printButtonMouseClicked

    private void displayBooks(){
        try{
            statement = ConClass.connectDB().createStatement();
            resultSet = statement.executeQuery("select * from admin1.BOOKSTBL");
            booksListTBL.setModel(DbUtils.resultSetToTableModel(resultSet));
            
        }
        catch(SQLException e){
              System.out.print(e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Billing().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToBillButton;
    private javax.swing.JTextField billNumberTF;
    private javax.swing.JTable billTBL;
    private javax.swing.JTextField bookTitleTF;
    private javax.swing.JTable booksListTBL;
    private javax.swing.JTextField clientNameTF;
    private javax.swing.JLabel closeWindowLBL;
    private javax.swing.JTextField isbnTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel logoutLBL;
    private javax.swing.JTextField priceTF;
    private javax.swing.JButton printButton;
    private javax.swing.JTextField quantityTF;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel totalText;
    private javax.swing.JLabel userNameLBL;
    // End of variables declaration//GEN-END:variables
}
